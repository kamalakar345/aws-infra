def get_branch(branch_name) {
    return branch_name.split("/")[1]
}


pipeline {
  agent { label 'aware-jenkins' }
  environment {
    region = "us-west-2"
  }
  
stages{
// Initialize all the terraform Scripts    
stage('Terragrunt-Init'){
        steps{
            dir('deployment') {
            script  {
                    cleanWs()
                    env.AWS_DEFAULT_PROFILE = get_branch(env.BRANCH_NAME)
                    // sh "printenv"
                    // sh "terragrunt --version"
                    sh "aws sts get-caller-identity"
                    def folders = ["regional-private", "regional-public"]
                        for (int i = 0; i < folders.size(); ++i) { 
                        dir("${folders[i]}"){
                        sh  "terragrunt init --reconfigure"
                        
                        // sh  "ls -lrta deployment/${folders[i]}"
                                            }
                                                                }
                    }
            // script{
            //     sh "tree"
            // }
                                }
                }
                        }


// Plan all the terraform requested resources
stage('Terragrunt-Plan'){
        steps{
            dir('deployment') {
            script  {
                    env.AWS_DEFAULT_PROFILE = get_branch(env.BRANCH_NAME)
                    // sh "printenv"
                    // sh "terragrunt --version"
                    sh "aws sts get-caller-identity"
                    def folders = ["regional-private", "regional-public"]
                        for (int i = 0; i < folders.size(); ++i) { 
                        dir("${folders[i]}"){
                        sh  "terragrunt plan -compact-warnings"
                                            }
                                                                }
                    }

                                }
                }
                        }
stage('Terragrunt-Apply'){
        steps{
            dir('deployment') {
            script  {
                    env.AWS_DEFAULT_PROFILE = get_branch(env.BRANCH_NAME)
                    // sh "printenv"
                    // sh "terragrunt --version"
                    sh "aws sts get-caller-identity"
                    def folders = ["regional-private", "regional-public"]
                        for (int i = 0; i < folders.size(); ++i) { 
                        dir("${folders[i]}"){
                        sh  "terragrunt apply -auto-approve -compact-warnings"
                        cleanWs()
                                            }
                                                                }
                    }

                                }
                }
                        }

stage('Terragrunt-Output'){
        steps{
            dir('deployment') {
            script  {
                    env.AWS_DEFAULT_PROFILE = get_branch(env.BRANCH_NAME)
                    // sh "printenv"
                    // sh "terragrunt --version"
                    sh "aws sts get-caller-identity"
                    def folders = ["regional-private", "regional-public"]
                        for (int i = 0; i < folders.size(); ++i) { 
                        dir("${folders[i]}"){
                        sh  "terragrunt init --reconfigure"
                        echo "=========Details of the Generated Resources for ${folders[i]}======="
                        sh "terragrunt output"
                        cleanWs()                    }
                                                                }
                    }

                                }
                }
                        }

}
}